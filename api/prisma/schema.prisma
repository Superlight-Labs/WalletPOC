datasource db {
    provider = "postgresql"
    url      = env("MAIN_DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id              String        @default(uuid())
    devicePublicKey String
    keyShares       MpcKeyShare[] @relation("KeySharesForUser")
    circleWallet    CircleWallet? @relation("CircleWalletForUser")

    @@unique([id, devicePublicKey])
}

model MpcKeyShare {
    id       String @id @default(uuid())
    path     String
    keyShare String

    user                User   @relation("KeySharesForUser", fields: [userId, userDevicePublicKey], references: [id, devicePublicKey])
    userId              String
    userDevicePublicKey String

    @@unique([userId, path])
}

model AccountAddressToTatumId {
    //address from account level (bip44)
    accountAddress String @id
    //external id from tatum
    tatumId        String
}

model CircleWallet {
    user                User   @relation("CircleWalletForUser", fields: [userId, userDevicePublicKey], references: [id, devicePublicKey])
    userId              String
    userDevicePublicKey String

    walletId  String          @unique
    entityId  String
    addresses CircleAddress[] @relation("CircleAddressForCircleWallet")

    @@unique([userId, userDevicePublicKey])
}

model CircleAddress {
    circleWallet CircleWallet @relation("CircleAddressForCircleWallet", fields: [walletId], references: [walletId])
    walletId     String

    addressId String @id @default(uuid())
    address   String
    currency  String
    chain     String

    @@unique([walletId, addressId])
}
